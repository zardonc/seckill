<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.MmallOrderMapper">
  <resultMap id="BaseResultMap" type="org.seckill.entity.MmallOrder">
    <!--@mbg.generated-->
    <!--@Table mmall_order-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="BIGINT" property="orderNo" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="shipping_id" jdbcType="INTEGER" property="shippingId" />
    <result column="payment" jdbcType="DECIMAL" property="payment" />
    <result column="payment_type" jdbcType="INTEGER" property="paymentType" />
    <result column="postage" jdbcType="INTEGER" property="postage" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="close_time" jdbcType="TIMESTAMP" property="closeTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, order_no, user_id, shipping_id, payment, payment_type, postage, `status`, payment_time, 
    send_time, end_time, close_time, create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update mmall_order
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="order_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.orderNo,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="shipping_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.shippingId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="payment = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.payment,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="payment_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.paymentType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="postage = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.postage,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.status,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="payment_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.paymentTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="send_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.sendTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="end_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.endTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="close_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.closeTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update mmall_order
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="order_no = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.orderNo != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.orderNo,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.userId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="shipping_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.shippingId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.shippingId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="payment = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.payment != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.payment,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="payment_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.paymentType != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.paymentType,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="postage = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.postage != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.postage,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.status,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="payment_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.paymentTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.paymentTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="send_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.sendTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.sendTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="end_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.endTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.endTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="close_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.closeTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.closeTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mmall_order
    (order_no, user_id, shipping_id, payment, payment_type, postage, `status`, payment_time, 
      send_time, end_time, close_time, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.orderNo,jdbcType=BIGINT}, #{item.userId,jdbcType=INTEGER}, #{item.shippingId,jdbcType=INTEGER}, 
        #{item.payment,jdbcType=DECIMAL}, #{item.paymentType,jdbcType=INTEGER}, #{item.postage,jdbcType=INTEGER}, 
        #{item.status,jdbcType=INTEGER}, #{item.paymentTime,jdbcType=TIMESTAMP}, #{item.sendTime,jdbcType=TIMESTAMP}, 
        #{item.endTime,jdbcType=TIMESTAMP}, #{item.closeTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="org.seckill.entity.MmallOrder" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mmall_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      order_no,
      user_id,
      shipping_id,
      payment,
      payment_type,
      postage,
      `status`,
      payment_time,
      send_time,
      end_time,
      close_time,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{orderNo,jdbcType=BIGINT},
      #{userId,jdbcType=INTEGER},
      #{shippingId,jdbcType=INTEGER},
      #{payment,jdbcType=DECIMAL},
      #{paymentType,jdbcType=INTEGER},
      #{postage,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},
      #{paymentTime,jdbcType=TIMESTAMP},
      #{sendTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP},
      #{closeTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      order_no = #{orderNo,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      shipping_id = #{shippingId,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=INTEGER},
      postage = #{postage,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="org.seckill.entity.MmallOrder" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mmall_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="shippingId != null">
        shipping_id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="postage != null">
        postage,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null">
        #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        #{postage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null">
        shipping_id = #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        postage = #{postage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>