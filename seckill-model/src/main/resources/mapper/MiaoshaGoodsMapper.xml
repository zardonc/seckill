<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.MiaoshaGoodsMapper">
  <resultMap id="BaseResultMap" type="org.seckill.entity.MiaoshaGoods">
    <!--@mbg.generated-->
    <!--@Table miaosha_goods-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="miaosha_price" jdbcType="DECIMAL" property="miaoshaPrice" />
    <result column="stock_count" jdbcType="INTEGER" property="stockCount" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, goods_id, miaosha_price, stock_count, start_date, end_date
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update miaosha_goods
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="miaosha_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.miaoshaPrice,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="stock_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.stockCount,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="start_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.startDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="end_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.endDate,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update miaosha_goods
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="miaosha_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.miaoshaPrice != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.miaoshaPrice,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="stock_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.stockCount != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.stockCount,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="start_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.startDate != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.startDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="end_date = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.endDate != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.endDate,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into miaosha_goods
    (goods_id, miaosha_price, stock_count, start_date, end_date)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.goodsId,jdbcType=BIGINT}, #{item.miaoshaPrice,jdbcType=DECIMAL}, #{item.stockCount,jdbcType=INTEGER}, 
        #{item.startDate,jdbcType=TIMESTAMP}, #{item.endDate,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="org.seckill.entity.MiaoshaGoods" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into miaosha_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      goods_id,
      miaosha_price,
      stock_count,
      start_date,
      end_date,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{goodsId,jdbcType=BIGINT},
      #{miaoshaPrice,jdbcType=DECIMAL},
      #{stockCount,jdbcType=INTEGER},
      #{startDate,jdbcType=TIMESTAMP},
      #{endDate,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      goods_id = #{goodsId,jdbcType=BIGINT},
      miaosha_price = #{miaoshaPrice,jdbcType=DECIMAL},
      stock_count = #{stockCount,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="org.seckill.entity.MiaoshaGoods" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into miaosha_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="miaoshaPrice != null">
        miaosha_price,
      </if>
      <if test="stockCount != null">
        stock_count,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="miaoshaPrice != null">
        #{miaoshaPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockCount != null">
        #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="miaoshaPrice != null">
        miaosha_price = #{miaoshaPrice,jdbcType=DECIMAL},
      </if>
      <if test="stockCount != null">
        stock_count = #{stockCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>