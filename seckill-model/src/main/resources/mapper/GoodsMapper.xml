<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="org.seckill.entity.Goods">
    <!--@mbg.generated-->
    <!--@Table goods-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_title" jdbcType="VARCHAR" property="goodsTitle" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_detail" jdbcType="LONGVARCHAR" property="goodsDetail" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
  </resultMap>
  <resultMap id="BaseResultMapGoodsVo" type="org.seckill.vo.GoodsVo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_title" jdbcType="VARCHAR" property="goodsTitle" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_detail" jdbcType="LONGVARCHAR" property="goodsDetail" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="miaosha_price" jdbcType="DECIMAL" property="seckillPrice"/>
    <result column="stock_count" jdbcType="INTEGER" property="stockCount"/>
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate"/>
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, goods_name, goods_title, goods_img, goods_detail, goods_price, goods_stock
  </sql>
  <sql id="GoodsVo_Column">
    miaosha_goods.id as id, goods_name, goods_title, goods_img, goods_detail, goods_price, goods_stock, miaosha_price, stock_count, start_date, end_date
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update goods
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="goods_title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsTitle,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="goods_img = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsImg,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="goods_detail = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsDetail,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="goods_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsPrice,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="goods_stock = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.goodsStock,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update goods
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="goods_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsTitle != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsTitle,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_img = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsImg != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsImg,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_detail = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsDetail != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsDetail,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsPrice != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsPrice,jdbcType=DECIMAL}
          </if>
        </foreach>
      </trim>
      <trim prefix="goods_stock = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.goodsStock != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.goodsStock,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods
    (goods_name, goods_title, goods_img, goods_detail, goods_price, goods_stock)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.goodsName,jdbcType=VARCHAR}, #{item.goodsTitle,jdbcType=VARCHAR}, #{item.goodsImg,jdbcType=VARCHAR}, 
        #{item.goodsDetail,jdbcType=LONGVARCHAR}, #{item.goodsPrice,jdbcType=DECIMAL}, 
        #{item.goodsStock,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="org.seckill.entity.Goods" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      goods_name,
      goods_title,
      goods_img,
      goods_detail,
      goods_price,
      goods_stock,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{goodsName,jdbcType=VARCHAR},
      #{goodsTitle,jdbcType=VARCHAR},
      #{goodsImg,jdbcType=VARCHAR},
      #{goodsDetail,jdbcType=LONGVARCHAR},
      #{goodsPrice,jdbcType=DECIMAL},
      #{goodsStock,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_title = #{goodsTitle,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_detail = #{goodsDetail,jdbcType=LONGVARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="org.seckill.entity.Goods" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsTitle != null">
        goods_title,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="goodsDetail != null">
        goods_detail,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsStock != null">
        goods_stock,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetail != null">
        #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        goods_title = #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetail != null">
        goods_detail = #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        goods_stock = #{goodsStock,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

    <select id="goodsVoList" resultMap="BaseResultMapGoodsVo">
        select
        <include refid="GoodsVo_Column"/>
        from miaosha_goods
                     left join goods on miaosha_goods.goods_id = goods.id
    </select>

  <select id="goodsVoByGoodsId" resultMap="BaseResultMapGoodsVo">
    select
    <include refid="GoodsVo_Column"/>
    from miaosha_goods
    left join goods on miaosha_goods.goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
</mapper>